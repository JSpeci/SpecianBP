

seznámení se s npm - správce balíčku pro node.js. Správné sestavení, dependencies a založení klientského projektu

seznámení se s parcel bundlerem - překladačem tsx (es6) do index.js souboru.

Migrační projekt
Migrace dat do ms sql databáze - backup má 1,3 GB. Data od 1.4 do 22.8.2018. Step je 10sekund.
Zvolil jsem ms sql databázi jako nejjednodušší cestu připojení databáze k asp.net core webApi projektu.
Migrační projekt má svoje vlastní repo zde: https://github.com/JSpeci/CeaDataImport 
Knihovny poskytnuté ke čtení .cea filu jsou spustitelné pouze v .net frameworku 4.6.1.,
proto DataImport není subprojekt hlavního projektu.

První krok byla analýza archivu - jaká data v nich mám. Rozhodl jsem se je rozdělit do několika entit (Current,Voltage,Power,Status,Temperature), aby datová řada nebyla jedna velká nepřehledná entita s 300 atributy. Entity obsahují atributy pojmenované stejně, jako v konkrétních .cea archivech.
Každá entita má Time: DateTime, Id: Guid. A pak definované atributy. Keré jsem vykopíroval ručně - vygeneroval jsem jejich jména a typ do txt souboru (https://github.com/JSpeci/CeaDataImport/blob/master/Translations.veliciny4-2018.txt)
a pak podle něj vytvořil kód entit. Tento krok byl jediný manuální.
Pokud by bylo , lze přejít na archiv s jiným složením a opět ho migrovat do databáze.
Samotná migrace spočívá v generování sql bulk insert pomocí SqlClient knihovny.
Odladěná migrace zabrala přibližně hodinu. Nyní mám fullbackup, který můžu jakkoliv zmenšovat, omezovat.
Entity můžete prohlédnout v hlavním repozitáři aplikace
Repozitář hlavní aplikace naleznete zde : https://github.com/JSpeci/SpecianBP

K hlavní aplikaci.

Prokousal jsem se mnoha tutoriály jak ustanovit novou web aplikaci s přidáním vlastní klientské aplikace. Seznámil jsem se s npm - node.js package managerem(dependencies/ dev-dependencies) a jak funguje bundling. K tomu používám parcel bundler - je daleko jednodušší a dá se používat bez složitého konfigurování oproti webpacku. Většinu času jsem strávil řešním toho, proč něco nefunguje jak chci. Hluboká zkušenost. Obvykle jsem přišel k rozjetým projektům. 

Asp.net ore 2.1 webAplikace, bez razor views. 
Default home route vrací klientskou single page aplikaci v React.js + mobX. Používám typescript : typový javascript. VSCode vás nutí všemu řiřadit typ/interface, primitivní, nebo objektový a nutí vás definovat i návratové typy. Tudíž od začátku se to chová jako psaní kódu v C# se správným napovídáním.









